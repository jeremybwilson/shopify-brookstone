/* BORDERFREE - Pseudo-lib file..
 * 
 *   This file is the lib file for borderfree, they did a bit of customization
 *   work which is why the middle part is unminified, but we want to avoid 
 *   modifying this when we can (its okay if you need to though). New UI piece
 *   additions should be added to the borderfree-script.liquid file
 *      --> Located at : src > snippets > borderfree-script.liquid
 *****************************************************************************/

/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 0);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }

var Cookies = __webpack_require__(1);
var PAYPAL_PRODUCTION_URL = "https://checkout.borderfree.com/htmlcheckout/views/preloadBack_pp.xhtml";
var PAYPAL_DEV_URL = "https://stagecheckout.borderfree.com/htmlcheckout/views/preloadBack_pp.xhtml";

(function (BorderFree, jQuery, Cookies, undefined) {
  var $borderfreeToggle = $("[data-borderfree-modal]");
  var $borderfreeClose = $("[data-close-borderfree]");
  var $borderfreeContainer = $("[data-borderfree-container]");
  var $borderfreeInlineCartForm = $("[data-borderfree-checkout-form]");

  var addPriceClasses = function addPriceClasses() {
    var priceClassesLoaded = false;
    var priceClasses = setInterval(function () {
      if ($(".regular-price").length && priceClassesLoaded === false) {
        priceClassesLoaded = true;

        $(".regular-price").each(function (i, cur) {
          $(cur).addClass("bfx-price");
        });

        $(".old-price").each(function (i, cur) {
          $(cur).find("s").addClass("bfx-price");
        });

        $(".special-price").each(function (i, cur) {
          $(cur).addClass("bfx-price");
        });

        $(".usi_value").each(function (i, cur) {
          $(cur).addClass("bfx-price");
        });

        clearInterval(priceClasses);
      }
    }, 50);
  };

  var toggleBorderFree = function toggleBorderFree(action) {
    if (action === "show") {
      $borderfreeContainer.addClass("js-is-active");
    } else if (action === "hide") {
      $borderfreeContainer.removeClass("js-is-active");
    }
  };

  BorderFree.isProduction = false;

  BorderFree.addBfxPriceClasses = function () {
    $("[data-bfx-list-price]").find(".bfx-price").addClass("bfx-list-price");
    $("[data-bfx-total-subtotal]").find(".bfx-price").addClass("bfx-total-subtotal subtotal-price-wrap");
    $("[data-bfx-discount-total]").find(".bfx-price").addClass("bfx-total-discount");
    $("[data-bfx-product-subtotal]").find(".bfx-price").addClass("bfx-product-subtotal");
  };

  var borderFree = function borderFree() {
    var currentCountry = $("#bfx-cc-countries-select option:selected").text();
    var currentCountryCode = $("#bfx-cc-countries-select option:selected").val();
    var currentCountryFlag = $(".bfx-cc-flag img").clone().addClass("current-country-image");
    var currentCountryCurrency = $("#bfx-cc-currencies-select option:selected").val();

    var markups = [currentCountryCurrency, currentCountry].map(function (c) {
      return "<span class=\"hidden-sm-down\">" + c + "</span>";
    });

    var $currentCountryContainer = $("<span />", {
      class: "current-country-container",
      html: [currentCountryFlag].concat(_toConsumableArray(markups))
    });

    if (currentCountryCode !== "US") {
      $borderfreeInlineCartForm.attr("method", "GET");
      $(".flag-icon").removeClass("icon-usa").addClass("icon-flag").addClass(currentCountryCode.toLowerCase());
      $(".borderfree-shipping-text").text(currentCountry.toUpperCase());
      $(".js-inline-checkout-button").hide();
      $(".js-add-to-cart-checkout-button").attr("href", "/cart").text("VIEW SHOPPING CART");
    } else {
      $("[data-borderfree-hidden]").removeAttr("data-borderfree-hidden");
    }

    $("[data-borderfree-modal]").removeClass("hidden-block");

    $(".current-country").append($currentCountryContainer).show();

    $("#bfx-cc-countries-select option").each(function () {
      $(this).clone().appendTo(".js-change-bfx-country");
    });

    $("#bfx-cc-currencies-select option").each(function () {
      $(this).clone().appendTo(".js-change-bfx-currency");
    });

    $(".js-change-bfx-currency").prop("disabled", false);

    BorderFree.addBfxPriceClasses();
  };

  var setEnvironment = function setEnvironment(isProduction) {
    BorderFree.isProduction = isProduction;
  };

  var borderFreeCheck = function borderFreeCheck() {
    var borderFreeLoaded = false;
    var checkBf = setInterval(function () {
      if ($("#bfx-cc-wrapper").length && borderFreeLoaded === false) {
        borderFreeLoaded = true;
        borderFree();
        clearInterval(checkBf);
      }
    }, 50);
  };

  var initializePaypalEnvoy = function initializePaypalEnvoy(ppStatus, token) {
    var srcURL = BorderFree.isProduction ? PAYPAL_PRODUCTION_URL : PAYPAL_DEV_URL;
    var iframeSrc = srcURL + "?ppStatus=" + ppStatus + "&token=" + token;
    var iframeTemplate = "\n\t\t\t<iframe name=\"envoy\" id=\"envoyId\" src=\"" + iframeSrc + "\" frameborder=\"0\" border=\"0\" scrolling=\"no\" style=\"width: 100%;min-height:975px;\"></iframe>\n\t\t\t<iframe id=\"__frame\" width=\"0\" height=\"0\" frameborder=\"0\"></iframe>\n\t\t";
    var $appendTarget = $("form[action='/cart']");

    // hide heading on cart page
    setTimeout(function () {
      return $("#shopping-cart > h2").remove();
    }, 450);

    $appendTarget.html(iframeTemplate);
  };

  var removeUnnecessaryElements = function removeUnnecessaryElements() {
    // remove find in store option
    $(".btn--locally").remove();
    // remove Google Pay
    $(".additional-checkout-button--google-pay").remove();
    // remove Apple Pay
    $(".additional-checkout-button--apple-pay").remove();
    // remove paypal
    $(".additional-checkout-button--paypal").remove();
    // remove amazon
    $(".additional-checkout-button--amazon").remove();

    // remove additional checkout buttons from cart
    $(".additional_checkout_buttons").remove();
  };

  var setUserAgentCustomDataField = function setUserAgentCustomDataField() {
    var $customDataField = $("#orderUserAgent");
    if ($customDataField.length) $customDataField.html(navigator.userAgent);
  };

  var bindUIActions = function bindUIActions() {
    var BCSfFilter = BCSfFilter || null;
    
    // Override BC SF Search filter method to provide localized prices for AJAX search
    if ( BCSfFilter ) {
      BCSfFilter.prototype.buildSuggestionProductPrice = function (a) {
        var b = a.compare_at_price_min > a.price_min,
            c = this.formatMoney(100 * a.price_min),
            d = this.formatMoney(100 * a.compare_at_price_min);
        this.getSettingValue("search.removePriceDecimal") && (c = this.removeDecimal(c), d = this.removeDecimal(d));
        var e = "";
        return this.getSettingValue("search.showSuggestionProductPrice") && (e += '<div class="' + this.class.searchSuggestion + '-product-price">', b && this.getSettingValue("search.showSuggestionProductSalePrice") ? (e += "<s>" + d + "</s>  ", e += '<span class="bc-sf-product-sale-price bfx-price">' + c + "</span>") : e += '<span class="bc-sf-product-regular-price bfx-price">' + c + "</span>", e += "</div>"), e;
      };
    }

    setTimeout(function () {
      $(".bfx-checkout").removeAttr("disabled");
    });
    $borderfreeToggle.on("click", function (event) {
      event.preventDefault();

      if (!$borderfreeContainer.hasClass("js-is-active")) {
        if ($(this).hasClass("borderfree-footer-selector")) {
          $("html, body").animate({
            scrollTop: 0
          }, 200, function () {
            return toggleBorderFree("show");
          });
        } else {
          toggleBorderFree("show");
        }
      } else {
        toggleBorderFree("hide");
      }
    });

    $(".js-change-bfx-country").on("change", function () {
      var val = $(this).val();

      $("#bfx-cc-countries-select option:selected").prop("selected", false);
      $('#bfx-cc-countries-select option[value="' + val + '"]').prop("selected", true);
      $("#bfx-cc-countries-select").trigger("change");
    });

    $(".js-change-bfx-currency").on("change", function () {
      var val = $(this).val();
      $("#bfx-cc-currencies-select option:selected").prop("selected", false);
      $('#bfx-cc-currencies-select option[value="' + val + '"]').prop("selected", true);
    });

    $(document).on("click", ".js-update-borderfree", function () {
      var country = $(this).closest(".borderfree-inside-container").find(".js-change-bfx-country").val();
      var countryName = $(this).closest(".borderfree-inside-container").find(".js-change-bfx-country option:selected").text();
      var currency = $(this).closest(".borderfree-inside-container").find(".js-change-bfx-currency").val();

      var domain = BorderFree.isProduction ? "aquatalia.myshopify.com" : "aquatalia.myshopify.com";
      var isInternational = country !== "US" ? "true" : "false";
      Cookies.set("bfx.isInternational", isInternational, { domain: domain });
      Cookies.set("bfx.countryName", countryName, { domain: domain });
      Cookies.set("bfx.country", country, { domain: domain });
      Cookies.set("bfx.currency", currency, { domain: domain });

      window.location.reload(true);
    });

    $(".bfx-checkout").on("click", function () {
      var currentCountryCode = $("#bfx-cc-countries-select option:selected").val();

      // hide heading on cart page
      setTimeout(function () {
        return $("#shopping-cart > h2").remove();
      }, 450);

      if (currentCountryCode !== "US") $(".js-minicart-hide").hide();
    });

    $(document).on("click", ".js-cart-drawer-checkout", function (e) {
      e.preventDefault();
      window.location = "/cart";
    });

    $borderfreeClose.on("click", function () {
      toggleBorderFree("hide");
    });

    if (Cookies.get("bfx.isInternational") === "true") {
      document.body.classList.add("bfx-active");

      removeUnnecessaryElements();
      var path = window.location.pathname;

      if (path === "/cart" && getUrlParameter("ppStatus") !== "") {
        var ppStatus = getUrlParameter("ppStatus");
        var token = getUrlParameter("token");

        initializePaypalEnvoy(ppStatus, token);
      }
    }
    // Hide gift card
    $('[class*="gift-card"]').remove();
  };
  BorderFree.init = function () {
    var isProd = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;

    setEnvironment(isProd);
    setUserAgentCustomDataField();
    addPriceClasses();
    bindUIActions();

    borderFreeCheck();
  };
})(window.Borderfree = window.Borderfree || {}, jQuery, Cookies);

function getUrlParameter(name) {
  name = name.replace(/[\[]/, "\\[").replace(/[\]]/, "\\]");
  var regex = new RegExp("[\\?&]" + name + "=([^&#]*)");
  var results = regex.exec(location.search);
  return results === null ? "" : decodeURIComponent(results[1].replace(/\+/g, " "));
}

/***/ }),
/* 1 */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__;/*!
 * JavaScript Cookie v2.2.0
 * https://github.com/js-cookie/js-cookie
 *
 * Copyright 2006, 2015 Klaus Hartl & Fagner Brack
 * Released under the MIT license
 */
;(function (factory) {
	var registeredInModuleLoader = false;
	if (true) {
		!(__WEBPACK_AMD_DEFINE_FACTORY__ = (factory),
				__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?
				(__WEBPACK_AMD_DEFINE_FACTORY__.call(exports, __webpack_require__, exports, module)) :
				__WEBPACK_AMD_DEFINE_FACTORY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
		registeredInModuleLoader = true;
	}
	if (true) {
		module.exports = factory();
		registeredInModuleLoader = true;
	}
	if (!registeredInModuleLoader) {
		var OldCookies = window.Cookies;
		var api = window.Cookies = factory();
		api.noConflict = function () {
			window.Cookies = OldCookies;
			return api;
		};
	}
}(function () {
	function extend () {
		var i = 0;
		var result = {};
		for (; i < arguments.length; i++) {
			var attributes = arguments[ i ];
			for (var key in attributes) {
				result[key] = attributes[key];
			}
		}
		return result;
	}

	function init (converter) {
		function api (key, value, attributes) {
			var result;
			if (typeof document === 'undefined') {
				return;
			}

			// Write

			if (arguments.length > 1) {
				attributes = extend({
					path: '/'
				}, api.defaults, attributes);

				if (typeof attributes.expires === 'number') {
					var expires = new Date();
					expires.setMilliseconds(expires.getMilliseconds() + attributes.expires * 864e+5);
					attributes.expires = expires;
				}

				// We're using "expires" because "max-age" is not supported by IE
				attributes.expires = attributes.expires ? attributes.expires.toUTCString() : '';

				try {
					result = JSON.stringify(value);
					if (/^[\{\[]/.test(result)) {
						value = result;
					}
				} catch (e) {}

				if (!converter.write) {
					value = encodeURIComponent(String(value))
						.replace(/%(23|24|26|2B|3A|3C|3E|3D|2F|3F|40|5B|5D|5E|60|7B|7D|7C)/g, decodeURIComponent);
				} else {
					value = converter.write(value, key);
				}

				key = encodeURIComponent(String(key));
				key = key.replace(/%(23|24|26|2B|5E|60|7C)/g, decodeURIComponent);
				key = key.replace(/[\(\)]/g, escape);

				var stringifiedAttributes = '';

				for (var attributeName in attributes) {
					if (!attributes[attributeName]) {
						continue;
					}
					stringifiedAttributes += '; ' + attributeName;
					if (attributes[attributeName] === true) {
						continue;
					}
					stringifiedAttributes += '=' + attributes[attributeName];
				}
				return (document.cookie = key + '=' + value + stringifiedAttributes);
			}

			// Read

			if (!key) {
				result = {};
			}

			// To prevent the for loop in the first place assign an empty array
			// in case there are no cookies at all. Also prevents odd result when
			// calling "get()"
			var cookies = document.cookie ? document.cookie.split('; ') : [];
			var rdecode = /(%[0-9A-Z]{2})+/g;
			var i = 0;

			for (; i < cookies.length; i++) {
				var parts = cookies[i].split('=');
				var cookie = parts.slice(1).join('=');

				if (!this.json && cookie.charAt(0) === '"') {
					cookie = cookie.slice(1, -1);
				}

				try {
					var name = parts[0].replace(rdecode, decodeURIComponent);
					cookie = converter.read ?
						converter.read(cookie, name) : converter(cookie, name) ||
						cookie.replace(rdecode, decodeURIComponent);

					if (this.json) {
						try {
							cookie = JSON.parse(cookie);
						} catch (e) {}
					}

					if (key === name) {
						result = cookie;
						break;
					}

					if (!key) {
						result[name] = cookie;
					}
				} catch (e) {}
			}

			return result;
		}

		api.set = api;
		api.get = function (key) {
			return api.call(api, key);
		};
		api.getJSON = function () {
			return api.apply({
				json: true
			}, [].slice.call(arguments));
		};
		api.defaults = {};

		api.remove = function (key, attributes) {
			api(key, '', extend(attributes, {
				expires: -1
			}));
		};

		api.withConverter = init;

		return api;
	}

	return init(function () {});
}));


/***/ })
/******/ ]);